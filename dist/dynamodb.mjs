import{DynamoDB as e}from"aws-sdk";var r=new e.DocumentClient,n=function(e){try{var n=Object.assign({},{ReturnValues:"ALL_NEW"},e);return Promise.resolve(new Promise(function(e,t){r.update(n,function(r,n){r?(console.error(r),t(r)):e(n)})}))}catch(e){return Promise.reject(e)}},t=function(e){return Object.keys(e).map(function(e){return e+" = :"+e}).join(", ")},o=function(e){return Object.fromEntries(Object.entries(e).map(function(e){var r=e[1];return[":"+e[0],"string"==typeof r||"number"==typeof r?r:JSON.stringify(r)]}))},c=function(e){try{var n=Object.assign({},e);return Promise.resolve(new Promise(function(e,t){r.get(n,function(r,n){r?(console.error(r),t(r)):e(n)})}))}catch(e){return Promise.reject(e)}},i=function(e){try{var n=Object.assign({},e);return Promise.resolve(new Promise(function(e,t){r.scan(n,function(r,n){r?(console.error(r),t(r)):e(n)})}))}catch(e){return Promise.reject(e)}},s=function(e){try{var n=Object.assign({},{ReturnValues:"ALL_OLD"},e);return Promise.resolve(new Promise(function(e,t){r.delete(n,function(r,n){r?(console.error(r),t(r)):e(n)})}))}catch(e){return Promise.reject(e)}};export{n as updateItem,t as buildExpression,o as buildAttributes,c as getItem,i as scanItems,s as deleteItem};
//# sourceMappingURL=dynamodb.mjs.map
